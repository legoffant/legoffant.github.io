<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Trivial notes - Anthony Le Goff</title><link>/</link><description></description><lastBuildDate>Wed, 12 May 2021 19:40:00 +0200</lastBuildDate><item><title>Introduction à l'extremisme sous GNU/Linux</title><link>/introduction-a-lextremisme-sous-gnulinux.html</link><description>&lt;h2&gt;A Propos&lt;/h2&gt;
&lt;p&gt;Toi, tu as entendu parler d'Arch? Cela commence comme ça, c'est un murmure dans la communauté des libristes. On en parle pas trop car c'est limite légendaire que certain utilisateurs de GNU/Linux seraient capable de construire eux-même leur propre système d'exploitation. Mais combien sont-ils? On estime que 5 millions d'archers sont comptabiliser parmis les 90-100 millions d'utilisateurs de GNU/Linux, dont 40 millions sous Ubuntu. Soit environ 4% d'archers. Pourtant c'est l'une des communautés les plus actives avec la devise de la distribution comme principe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;KISS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Keep&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;Simple&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Stupid&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La distribution est construite comme un LEGO. L'utilisateur va construire son système d'exploitation sur mesure selon ces besoins. Elle est adapté aux utiliteurs recherchant à customiser leur environnement. Tout ce paramètre, on apprend les bases comment GNU/Linux fonctionne. Pour toutes personnes voulant apprendre à utiliser en profondeur, tout en connaissant les entrailles du système c'est un passage obligé. On peut dire même que c'est un rituel pour les hackers. Je rappel que les hackers démontent les systèmes informatiques pour comprendre le fonctionnement. On rentre totalement dans la logique. On a un accès simplifier à la création de système d'exploitation à la demande. D'autres se tourneront vers Gentoo ou l'a aussi on construit son système en compilant depuis les sources. On peut-être rassurer que aucun malware ou spyware soit intégrer dans le système. &lt;/p&gt;
&lt;p&gt;Alors qu'es ce qui fait qu'il y a plus d'utilisateurs sur Arch que Gentoo. Principalement la communauté. Le wiki est surement la seconde plus grande source d'information après celui d'Ubuntu. Et il existe sous Arch AUR(Arch User Repository) qui est le dépot de logiciel par les utilisateurs. Ainsi des programmes non disponible dans les dépots officiels sont souvent portée sous AUR. &lt;/p&gt;
&lt;p&gt;Arch est particulièrement adapté pour la mise en place dans un groupe de recherche en innovation radicale à la pointe de la Tech.Le logiciel libre accélère l'innovation par la libre circulation de l'information. On peut compter sur ces hackers utilisant les dépots de &lt;a href="https://www.blackarch.io/"&gt;Blackarch&lt;/a&gt; pour assurer la cybersécurité. Encore aujourd'hui dans les branches les plus extremistes il y a un débat de choix de distribution entre Debian "Kali" et Arch "Blackarch" parmis la communauté des hackers. On peut considéré que les archers sont plus en marge avec une connaissance approfondi des systèmes. Cette connaissance leur permet d'avoir des compétences avancés tel que le partitionnement de disque et la protection de donnée en introduisant une sécurité militaire sur un poste de travail. Rien n'empêche un archer de chiffrer ces partitions avec des algorithmes avancés. On peut donc ce poser la question si des archers ne sont pas plus aptes à travailler dans des environnements contraint de recherche et développement ou la protection de l'information est nécessaire.&lt;/p&gt;
&lt;h2&gt;Extremisme libertarien&lt;/h2&gt;
&lt;p&gt;Bill Gates à longtemps consideré les libristes et le logiciel libre comme un groupuscule extremiste faisant allusion à du communisme. Pour l'anecdote de la rupture dans les années 90 de Microsoft et le discours de Richard Stallman. D'ailleurs on n'a jamais vu de milliardaire étant un defenseur des 4 libertés fondamentales du logiciel libre. Certains influenceurs dans le top des penseurs mondiaux on un discours ouvert sur l'open source mais plus limités sur le logiciel libre. Qui en fait un mouvement plus en marge. Le principe de logiciel gratuit pose problème avec la possibilité d'en retirer un revenu et de rémunérer les developpeurs. Quand on parle de business on emploi "open source". Et on retrouve des multinationales d'envergure tel que le &lt;a href="https://www.datamation.com/open-source/35-top-open-source-companies/"&gt;top 35 entreprises "open source"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le discours libriste se retrouve plus facilement autour de l'économie de l'abondance que de pénurie et de rareté dont participe le capitaliste. La libre circulation de l'information, les libertés de copier et de redistribuer des logiciels est une amorce à l'économie de l'abondance. C'est un véritable mouvement de fond. Un monde post-pénurie est ouvert à nous si nous nous tournons vers le Cosmos. Les astéroides et les exoplanètes nous donnerons des quantités illimités de ressource rendant caduque l'offre de rareté de l'économie actuel.&lt;/p&gt;
&lt;p&gt;Ainsi la résistance numérique s'amorce autour de thématique tel que l'économie spatial et le minage d'astéroide aux interfaces homme-machine (IHM) tout droit sorti des vagues du transhumanisme.Le succès de la mise en place et l'accès à la technologie considéré par le transhumanisme sera au moins "open source" ou va accentuer les inégalités.&lt;/p&gt;
&lt;p&gt;Tout projet sérieux d'ingénierie passe de nos jours par la mise en place d'un repository sur Github. Les règles ont changé et tout commence par la transformation numérique. Quand on parle d'ingénierie système avec des projets fortement multi-discipline prenant en compte différente partis prenantes. La partie software peut-être développé en amont. Mais la gouvernance est fortement axé sur de la gestion de projet informatique. Github permet de mettre en place des ressources conséquente tel qu'un wiki, tableau de bord et serveur distant de documentation, tout en permettant de facilement contribuer sur le code. La station de travail sous Arch est particulièrement adapté pour les développeurs informatiques en recherche de productivité et de maitrise complète de leur système. &lt;/p&gt;
&lt;h2&gt;La nébuleuse Arch&lt;/h2&gt;
&lt;p&gt;Croire que Arch est réservé à l'élite des plus nerds d'entre nous est trompeur. Une entrée en matière est possible avec Manjaro. Cette distribution est un "fork" d'Arch Linux utilisant les specificités du gestionnaire de paquet pacman et AUR. L'installation du système se fait pas à pas et est guidé. L'avantage c'est que vous parlerez le même langage que la communauté Arch.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://manjaro.org/support/firststeps/"&gt;First step on Manjaro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chuangtzu.ftp.acc.umu.se/mirror/osdn.net/storage/g/m/ma/manjaro/Manjaro-User-Guide-French.pdf"&gt;User Guide français&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pour les plus motivez ce qui faut savoir sur Arch:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.fr/installation"&gt;Installation de base&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MatMoul/archfi"&gt;Automatiser l'installation avec le script archfi&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Post-installation&lt;/h3&gt;
&lt;p&gt;Fraichement installé sur votre nouveau système il reste quelques ajustement à faire pour avoir un système plus opérationnel. Beaucoup de manipulation se passe par le terminal ou le shell car c'est plus rapide. Ainsi après une fraîche install faite une mise à jour du système en lançant la commande:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -Syu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mise à jour des mirroirs de téléchargement des paquets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman-mirrors -g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Par la suite il est nécessaire d'installer quelques outils pour développeurs.En lançant dans un terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S base-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si vous regardez ce que contient &lt;a href="https://archlinux.org/groups/x86_64/base-devel/"&gt;ce metapackage&lt;/a&gt;, on peut trouver des utilitaires tels que gcc, le compilateur pour langage C, C++, Go essentiel à l'ingénierie logicielle, mais aussi make pour automatiser les commandes du compilateur sur de plus large projet.&lt;/p&gt;
&lt;p&gt;Ainsi que cette commande pour installer Git, Vim, zsh, curl et xterm&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S git vim zsh curl xterm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Installer quelques codecs supplémentaires&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S exfat-utils fuse-exfat a52dec faac faad2 flac jasper lame libdca libdv gst-libav libmad libmpeg2 libtheora libvorbis libxv wavpack x264 xvidcore flashplugin libdvdcss libdvdread libdvdnav dvd+rw-tools dvdauthor dvgrab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Prise en charge d'outils de compression, archivage par le gestionnaire de fichier Nautilus sous Gnome&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S file-roller seahorse-nautilus nautilus-share zlib p7zip unzip zip zziplib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Installer le SDK de kit de developpement Java:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S jdk-openjdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Installer des IDE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS code, il se nomme codium est libre sans la télémétrie de Microsoft&lt;/li&gt;
&lt;li&gt;Eclipse, IDE complet pour coder en Java&lt;/li&gt;
&lt;li&gt;Code::Blocks, IDE pour C/C++&lt;/li&gt;
&lt;li&gt;Pycharm, IDE pour python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si cela vous fatigue de jongler entre des IDE pour coder, Vim fait largement l'affaire.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S code codeblocks pycharm-community-edition
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour installer Eclipse Java il faut passer par AUR. Pour cela il est nécessaire d'installer un gestionnaire de paquet tel que yay.
Suivez &lt;a href="https://www.tecmint.com/install-yay-aur-helper-in-arch-linux-and-manjaro/"&gt;ce tutoriel sur yay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Puis pour installer Eclipse Java lancer la commande:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo yay -S eclipse-java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Quelques outils nécessaires:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigateurs internet chromium&lt;/li&gt;
&lt;li&gt;lecteur video vlc&lt;/li&gt;
&lt;li&gt;Editeur photo Gimp&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pacman -S vlc gimp chromium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je conseille egalement d'installer Zeal de la documentation hors-ligne pour developpeurs logiciels.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo yay -S zeal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il reste quelques customizations à faire tel que d'installer oh-my-zsh pour les power-users de la ligne de commande du shell:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/legoffant/a3e19432781236564cfe279ef660eb12"&gt;Installer oh-my-zsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ce faciliciter la vie en configurant ssh pour Git et Github:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/legoffant/27daf8e664662f5cad19bc069004ae37"&gt;Ce connecter à Github via ssh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ce post montre un peu l'étendu de la customization possible de son système d'exploitation par la branche plus extremiste sous linux tel que les archers lors de la post-install.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anthony Le Goff</dc:creator><pubDate>Wed, 12 May 2021 19:40:00 +0200</pubDate><guid isPermaLink="false">tag:None,2021-05-12:/introduction-a-lextremisme-sous-gnulinux.html</guid><category>Linux</category><category>linux</category><category>arch</category><category>configuration</category><category>manjaro</category></item><item><title>Apprendre à programmer en langage C/C++</title><link>/apprendre-a-programmer-en-langage-cc.html</link><description>&lt;p&gt;Vous n'avez pas les bases comme dirait Orelsan. Alors on reprend depuis le début. Tout le monde n'a pas la possibilité de faire une école d'ingénieur ou des écoles plus specialisé tels que Epitech ou 42. Je crois que le passionné en informatique soit capable de ce former seul grâce aux ressources sur le web et une bonne librairie. &lt;/p&gt;
&lt;p&gt;En vérité la majorité des hackers et informaticiens sont autodidacte et continu à apprendre tout les jours. L'une des compétences les plus prisés de ce siècle se fait par formation sur le web. Encore faut-il trouver du contenu pertinent. Car on peut tomber sur de la mauvaise qualité ou encore des problèmes de mise à jours de la norme.&lt;/p&gt;
&lt;p&gt;Le rendez-vous de tout les passionnés d'informatique passe par l'ancien site du Zéro renommé &lt;a href="https://openclassrooms.com/fr/"&gt;openclassrooms&lt;/a&gt; qui a longtemps servi de référence sur ces cours d'informatique. Si je ne savais pas par ou commencer j'y jeterai un oeil comme ressource crédible francophone. Il ne faut pas occulter le site &lt;a href="https://www.developpez.net/"&gt;developpez.net&lt;/a&gt; ou l'on trouve bien de l'aide pour la formation. Son forum était l'ancien stackoverflow français.&lt;/p&gt;
&lt;p&gt;On se demande quand on commence la programmation par quel langage que je devrais commencer. Il faut savoir qu'un développeur maitrise plusieurs langage mais il faut bien commencer par en choisir un. &lt;/p&gt;
&lt;p&gt;Ma stratégie conciste à apprendre le maitre langage, celui dont tous dérive pour connaitre les bases. En même temps je recherche à créer des logiciels libres et l'outil indispensable pour le faire est gcc sous un environnement GNU/Linux. Donc mon choix se porte en tout premier lieu sur le language C. Celui-ci est à la base de système d'exploitation de type UNIX. On le retrouve egalement sur Arduino le microcontrolleur. En réalité dans les systèmes embarqués bien souvent on retrouve du Linux avec du C/C++. Si vous choisissez d'apprendre la programmation sur Arduino en premier lieu on ne vous en voudra pas. On peut rapidement acquérir des bases solides sur des concepts tels que les variables, fonctions, conditions et boucles. Des concepts plus avancées de programmation seront plutôt développé en C tels que les pointeurs ou structures. Enfin on peut aborder la programmation orienté-objet sous C++.&lt;/p&gt;
&lt;p&gt;La gestion de la mémoire en langage C apporte quelques difficultés face à des concurrents tel que Python qui utilise le ramasse-miette pour la gérée. On doit ce préocuper de celle-ci en langage C/C++ permettant d'avoir de meilleurs performances. Malgré tout le langage C est relativement facile à apprendre tel que le prouve son utilisation sous Arduino. &lt;/p&gt;
&lt;p&gt;Parmis les ressources que je propose je préviligie ce qui sont moins gourmande en mémoire ainsi que leur possibilité d'adapter au besoin de chaque utilisateur. J'utilise une machine GNU/Linux qui est plus pratique pour le métier de développeur.&lt;/p&gt;
&lt;p&gt;Pour créer un programme en C il vous faut un éditeur de texte pour programmeur tel que Vim qui est en natif sur toutes machine GNU/Linux et un compilateur comme gcc.&lt;/p&gt;
&lt;p&gt;On ouvre un terminal et dans l'inviter de commande, le prompt on tape:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcc -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le terminal nous renvoi la version de gcc ici la version 10.2.0 s'il est installé sur l'ordinateur.&lt;/p&gt;
&lt;p&gt;On change de répertoire vers celui de travail et on crée un dossier src:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir src
&lt;span class="nb"&gt;cd&lt;/span&gt; src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On va créer un fichier en C avec Vim:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vim hello.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dans Vim on a le fichier hello.c et on va écrire un simple programme qui affiche "hello world" en C, il faut basculer en mode insertion en appuyant sur la touche &lt;code&gt;i&lt;/code&gt;puis écrire ce programme:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello world&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour sauvegarder et quitter Vim on tape &lt;code&gt;:wq!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enfin on va compiler le programme. Rappel: c'est l'étape ou le programme va être traduit en langage machine à base de 0 et de 1 compréhensible pour le micro-processeur:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcc hello.c -o hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;L'opération de compilation va créer un fichier binaire executable nommé "hello" visible en faisant un &lt;code&gt;ls&lt;/code&gt; dans le répertoire de travail.
Il reste plus qu'à lancer le programme généré par cette commande:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Qui affiche bien dans le terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;C'est tout ce que vous avez besoin pour commencer à coder en C. Retenez Vim + GCC et puis après quelques experiences Git et gdb pour approfondir le sujet.&lt;/p&gt;
&lt;p&gt;Je vous recommande les meilleurs lectures sur le sujet pour apprendre librement la programmation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://framabook.org/le-c-en-20-heures-2/"&gt;Le C en 20 heures; Berthomier, Schang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rocq.inria.fr/secret/Anne.Canteaut/COURS_C/cours.pdf"&gt;Programmation en langage C, Inria projet codes; Canteaut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zestedesavoir.com/tutoriels/755/le-langage-c-1/"&gt;Langage C, Zeste du savoir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anthony Le Goff</dc:creator><pubDate>Wed, 24 Mar 2021 21:07:00 +0100</pubDate><guid isPermaLink="false">tag:None,2021-03-24:/apprendre-a-programmer-en-langage-cc.html</guid><category>C/C++</category><category>C</category><category>C++</category><category>programmation</category><category>livres</category></item><item><title>Hello World</title><link>/hello-world.html</link><description>&lt;p&gt;Après moultes réflexions j'ai décidé de relancer un blog car après tout geek qui se doit on peu aussi s'épanouir dans l'écriture. Il y a là une idée culturel en particulier emprunté au monde des hackers qui est la circulation du savoir. Le partage de l'information à l'heure de la société de la connaissance est un facteur de levier considérable sur l'innovation. Je dirai que l'arrivée du world wide web au tout départ au CERN nous à fait basculer dans une nouvelle ère et nous sommes aujourd'hui les enfants en particulier les millenials de cette révolution entamé il y a 30 ans. Ce qui motivait les scientifiques du CERN étaient d'accélérer le partage et le "peer reviewing" de document de recherche.&lt;/p&gt;
&lt;p&gt;Ce blog est essentiellement l'idée de créer un journal de note de recherche de manière trivial. Je vais documenter mes avancés en informatique. Ce qui permettra tout à chacun d'apprendre de ce blog sur les thématiques proposées.&lt;/p&gt;
&lt;p&gt;Pour le choix du format de ce blog, je recherchais des outils libre de publication de contenu sur internet. Dans le design j'avais la contrainte temporel que les publications tiennent dans la durée tout en ayant une simplicité d'utilisation. J'ai regardé ce qui se faisait chez Wordpress mais je trouvais après quelques test que mes articles n'étaient pas très bien indexé par les robots de chez Google dans sa forme gratuite. Alors je me demande si c'est une restriction de Wordpress. J'ai décidé de migrer vers la solution des pages Github. Trouver un hébergeur pour un petit site avec quelques pages HTML sans besoin d'avoir de base de donnée conséquente me renvoi à des solutions tel que l'hébergement sur amazon S3 de contenu limité, ou encore Netlify. Question bande passante je ne pense pas amasser autant de visiteur que ça. C'est du blogging de niche. Plusieurs solutions s'ouvraient à moi en ouvrant une page Github. La mode est de créer un site statique avec un générateur de page tel que Octopress ou Jekyll tel que proposer sur le site. Je n'était pas partant car cela veut dire de mettre en place un environnement sous Ruby et de déployer des Gems. Heureusement Github ne s'arrête pas à ces seules générateurs de site statique(SSG). On retrouve des frameworks tel que Hugo codé en Go ou Gatsby en utilisant React et donc du Javascript. J'ai préféré un langage ou je suis plus confortable pour les fichiers de configuration tel que Python avec Pelican. Ce blog est en cours de développement. C'est un prototype que j'améliore petit à petit. Il faut noté le gain niveau sécurité avec les sites statiques comme on héberge dans un microservice que des pages d'HTML généré, il n'y a pas d'exploit possible avec le CMS ou la base de donnée. Comme je disais je voulais un blog qui tient dans la durée sans risque d'attaque ou de coupure de l'hébergeur. Github est là pour durée et ce n'est pas demain que le service disparaitra. Utiliser Github necessite de ce mettre au gout du jour des workflows moderne en développement informatique ou l'on héberge du code en remote grâce à l'outil de contrôle de version. C'est une habitude à prendre, il est nécessaire de rappelé que Github est une vitrine des projets que vous lancer en programmation.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anthony Le Goff</dc:creator><pubDate>Tue, 23 Mar 2021 11:59:00 +0100</pubDate><guid isPermaLink="false">tag:None,2021-03-23:/hello-world.html</guid><category>Inclassable</category><category>Premier</category><category>Inclassable</category></item></channel></rss>